Changelog for Shake

    #82, make -j0 guess at the number of processors
    #81, add --lint-tracker to use tracker.exe
    Add trackRead, trackWrite
    Add trackUse, trackChange, trackAllow
    #85, move rule creation functions into Development.Shake.Rule
    Mark Development.Shake.Sys as DEPRECATED with a pragma
    Change shakeLint to be of type Maybe Lint, instead of Bool
    #50, add shakeArgsAccumulate
0.10.10
    Improve Ninja --lint checking
0.10.9
    #76, add Ninja specific lint checking
    #75, add orderOnly dependencies
    #76, add needed, to assert a need doesn't rebuild
    #78, don't use cabal in the test suite
    #77, add shakeRunCommands and --skip-commands
    #67, add withVerbosity
    #51, add getShakeOptions
    Lots of Haddock improvements
    Deprecate system', use cmd or command instead
    #53, add addPath and addEnv to modify environment variables
    Make all search path things return the native separators
    #73, if Haskell can't write a unicode filename, skip the test
    Print out the entire database in diagnostics mode
    Rewrite database writes, old code could break metadata on error
    #25, optimise building with Ninja
    Fix many bugs in FilePath.normalise
    Require QuickCheck-2.0 or higher
    Change how the makefile parser treats \ characters
    Add a --no-build flag
    #74, allow cmd to be used with result IO
    Add a Util module, with Makefile parsing
0.10.8
    Allow unix-1.5.1 again
    Require Cabal 1.10 or above
    Convert to the cabal test compatible test suite
0.10.7
    Support time-1.2
    #71, fix a bug when requesting all three outputs from command
    #64, add progressProgram and use it in progressSimple
    Remove isRunning, kill the progress thread on completion
    #47, improve the performance of ?==, especially on "//*"
    #68, improve the docs for addOracle
    #55, ensure if you need phony targets you rebuild every time
    #52, ensure all command output is printed
    #20, document preferred compilation flags
    #20, speed up the Shake executable with GHC RTS flags
    #39, print out more of the version string on database change
    #41, require unix-2.6 or above
    #48, make it clear filetimes are hashes
    #43, improve the error messages on lint failures
    #45, avoid use of nub
    #45, avoid use of intersect which is O(n^2)
    #26, add newThrottle to create throttling resources
    #26, add unsafeExtraThread to run more than shakeThreads
    #32, add a check that withResources does not call need
    #614, support unicode filenames
    Require unordered-containers-0.2.1 or above
    Reduce stack usage when lint checking
    #24, create the output directories for the multiple file rule
    Improvements to match Ninja behaviour
0.10.6
    Include command/cmd in the default module
    #16, change the scoping in subninja
    #15, fix up the Ninja default targets
    Fix up --version output
0.10.5
    Improve progress prediction for the first build
    Fix removeFiles when there is a directory argument and a pattern
    Delete shakeDeterministic, shakeThreads=1 has the same effect
0.10.4
    Fix writeFileChanged for line endings on Windows
    Support arguments to --progress
    Set the number of capabilities based on -j flags
    Add shakeTimings, to time the separate stages
    Add AssumeSkip, mostly for benchmarking
    Normalise file arguments before calling want
    Expose ShakeException
    Add isFailure to ShakeProgress, and display in progressDisplay
    Add withResources
    Add -<.> alias for replaceExtension
    Add selectors on Stdout/Stdin/Exit
    Add CmdResult instance for ExitCode
0.10.3
    Upgrade to Flot-0.8
    Small documentation markup fixes
0.10.2
    Require process-1.1 or above
    Improve progress guesses (use exponential decay of work rate)
    Improve profiling report error messages
    Add a Command module, with alternatives to system' etc.
    #593, don't assume doesDirectoryExist = not . doesFileExist
    #594, swap how traced messages are printed out
    Add Chatty verbosity, for what was Loud
    Make repeated --verbose keep increasing the verbosity
    If shakeThreads==1 then always use a deterministic pool
    Add shakeLineBuffering, defaulting to True
    Improve the performance of profiling
    Documentation and corrections improvements
    Eliminate StepKey from the profiling output
    Add a --no-time flag
    Makefile improvements
    Avoid use of ghc-options in .cabal file
0.10.1
    Allow the shake executable to build
0.10
    Add phony, for writing phony actions
    Add removeFilesAfter
    Switch to the new profiling code
    Add actionOnException and actionFinally
    Add shakeArgsWith
    Rename shakeWithArgs to shakeArgs and change the clean argument
    Remove the -f alias for --flush
    Add a shake executable which runs Makefiles
    Rename shake to shake-test
    Change how progress messages are written
    Do not write a beep in progressDisplay, avoids a beep
    Add exe function to FilePath
0.9.1
    GHC head (7.7) compatibility by removing the Rules fundep
0.9
    Make the tests work on Linux
    Fix report generation on machines whose text format is not ASCII
    Make Directory functions work the same on Linux/Mac
    Change shakeVersion to be a String
    Stop alwaysRerun causing lint failures
    Make shakeLint check that the current directory does not change
    Add shakeOutput setting
    Add removeFiles function
    Add Sys module for writing consise system calls
    Add getEnv function
    Add shakeWithArgs and shakeOptDescrs
    Add newCache to cache the parsed contents of files
    Add newResourceIO and move newResource into the Rules monad
    Add shakeStorageLog, to help diagnosing obscure database errors
0.8
    Improve the Oracle documentation
    Allow getDirectoryFiles to operate recursively
0.7
    Change getDirectoryFiles to take a set of file patterns
    Add doesDirectoryExist function
    Add shakeAbbreviations feature
    Add a new Progress module for sensible progress messages
    Spawn shakeProgress on a separate thread, a safer default
    Improve the runtime error messages
    Add a quietly function, to hide traced commands
    Print main status messages when running a traced command
    Display the exit code when a system command fails
    Fix AssumeClean when the result exists but has never been built
    IMPORTANT: Incompatible on disk format change
    Change the storage to not write messages on --silent
    Add Applicative on Rules
    Add Applicative on Action
0.6
    Make addOracle return a result of askOracle
    Export the class bodies from Classes
    Don't export ShakeValue from Classes
0.5
    IMPORTANT: Incompatible on disk format change
    Add the ShakeValue constraint synonym
    Change the Oracle to be strongly typed
    Add a Classes module
0.4
    Add shakeFlush to control how often flush is called
    Fix a serious space leak in the thread pool
    #502, add shakeAssume to assume files are clean/dirty
    Remove validStored, replace with storedValue
    Remove the default validStored class, almost never right
    Remove Eq/Ord from ShakeOptions (now contains a func)
    #501, add statistics gathering functions to help report progress
    Ensure registering witnesses is thread safe
    Ensure GHC does not over-optimise type registration
0.3.10
    Add Paths.hs so you can run the tests from the tarball
0.3.9
    Don't rely on toList returning a consistent order
    Allow hashable-1.2
0.3.8
    Fix up FilePattern so "foo//bar" ?== "foo/bar"
0.3.7
    Update the cabal file
0.3.6
    Add addOracles, for implementing more advanced oracles
    Add withoutActions, for implementing command line arguments
0.3.5
    #571, vastly improve the correctness of FilePattern
    #574, documentation typos
    Expose rulePriority
0.3.4
    Update documentation with links to ICFP 2012 paper/talk
0.3.3
    Minor refactorings
0.3.2
    Fix cabal specification on non-Windows
0.3.1
    Don't use syntax also stolen by QuasiQuotes
    Avoid warnings about unused monadic values
    Fix up getModificationTime for GHC 7.6
    Don't assume catch is exported by Prelude (GHC 7.6 compat)
    Improve the error message when failing to build with *>> or ?>>
    Introduce a portable flag, to switch to portable FileTime ops
    Improve the error message when failing to build a file
    Ensure errors raised bubble up quickly
    Significant improvements to the profile output
    Only trace the program name by default, not the entire command
    Allow unordered-containers < 0.2 again
    Intern all keys, so they are only stored once
    Optimise modification time checking on Unix
    Optimise modification time checking on Windows
    Make some fields smaller on disk
    IMPORTANT: Incompatible on disk format change
    Switch to ByteString for storing File
    Add shakeDeterministic, along with a default random pool
    Make the Monad/Monoid instance for Rules strict
0.3
    #550, ensure the journal thread is locked
    #550, if your thread dies while reading the database then die
    #550, ensure you reset to before the slop before writing
    If the witness table is completely corrupt give a better error
    Make storage work with exceptions whose messages raise errors
    Journal error conditions, to ensure they don't repeat
    Better messages on invalid database versions
    Complete rewrite of the storage layer and journal design
    IMPORTANT: Incompatible on disk format change
0.2.11
    IMPORTANT: #546, don't save the database to where it was created
0.2.10
    Add systemCwd for running with a particular current directory
    Ensure the database is saved to where it was created
    #545, make sure if shake is killed, it kills its children
0.2.9
    Require unordered-containers 2.1 or higher, fixes bugs
    Allow transformers-0.3.*
    Add a random script generator and tester
    Improve the documentation for withResource
    Fix the unordered-containers constraint, was too loose
    Don't write report generation messages in Quiet mode
    Add ?>> operator, a generalisation of *>>
0.2.8
    Rename shakeDump to shakeReport
    Add profile report generator
0.2.7
    #530, require unordered-containers >= 0.1.4.3
0.2.6
    Improve the documentation code fragments (more links)
    Add support for managing finite resources
0.2.5
    Require hashable-1.1.2.3, which has a TypeRep instance
    Add Data/Typeable instances for ShakeOptions
    Add Data instance for Verbosity
0.2.4
    Include the C example source files
    Significant documentation improvements
0.2.3
    Create the shakeFiles directory if missing
0.2.2
    Allow deepseq-1.3.*
    Add a basic lint checking mode
    Remove the Dirty state entirely (was incorrect)
0.2.1
    Put diagnostics in more places
    Add a C example
0.2
    Add shakeStaunch
    Rename shakeParallel to shakeThreads
    Delete the lint support (never actually worked)
    Completely rewrite the central build algorithm
    Add verbosity Diagnostic
    Improve FilePath.normalise
    Add writeFileChanged
    Add systemOutput
    Add an Oracle module
    Add an explicit Verbosity type
    Change to lower precedence for *> etc
0.1.5
    Allow deepseq-1.2
0.1.4
    Don't export currentRule/currentStack
    Fix **>, was matching the wrong way round
    Fix FilePath normalise so it works properly on Windows
    Properly detect recursive rules, instead of looping
    Add *>> for building multiple files at once
0.1.3
    Fix a bug where a file rule could return with a lazy error
    Make sure all the files are stored in binary, not text
    Fix a pattern match error in getDirectoryFiles
0.1.2
    Add a warning in the description
0.1.1
    Significantly improved documentation
    system' now takes an initial argument for the program
0.1
    Many changes to signatures, some basic documentation
    Additional demo, to build shake itself
0.0
    Initial version, not ready for public use
